name: Continuous Integration

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript Check
        run: yarn tsc --noEmit

      - name: Run Tests
        run: yarn test --coverage

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: false

  build-android:
    name: Build Android Debug
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Debug
        run: |
          cd android
          ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk

  build-ios:
    name: Build iOS Debug
    runs-on: macos-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS Debug
        run: |
          cd ios
          xcodebuild -workspace QuackBrowser.xcworkspace -scheme QuackBrowser -configuration Debug -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 13' build

  ui-tests:
    name: UI Tests
    runs-on: macos-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Detox CLI
        run: npm install -g detox-cli

      - name: Install Applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build for Detox
        run: detox build --configuration ios.sim.debug

      - name: Run Detox Tests
        run: detox test --configuration ios.sim.debug --cleanup 